/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-09-25 15:57:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 추가부분 시작 ---------------------------------------------------------------->\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <!-- <script src=\"test.js\"></script> -->\r\n");
      out.write("    <!-- <script src=\"test.css\"></script> -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"test.css\">\r\n");
      out.write("    \r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--<h2>Weekly Coding Challenge #1: Sign in/up Form</h2>-->\r\n");
      out.write("<h2>회원 가입 및 로그인 페이지</h2>\r\n");
      out.write("<div class=\"container\" id=\"container\">\r\n");
      out.write("  <div class=\"form-container sign-up-container\">\r\n");
      out.write("    <form action=\"#\">\r\n");
      out.write("      <h1>Create Account</h1>\r\n");
      out.write("      <div class=\"social-container\">\r\n");
      out.write("        <a href=\"#\" class=\"social\"><i class=\"fab fa-facebook-f\"></i></a>\r\n");
      out.write("        <a href=\"#\" class=\"social\"><i class=\"fab fa-google-plus-g\"></i></a>\r\n");
      out.write("        <a href=\"#\" class=\"social\"><i class=\"fab fa-linkedin-in\"></i></a>\r\n");
      out.write("      </div>\r\n");
      out.write("      <span>or use your email for registration</span>\r\n");
      out.write("      <input type=\"text\" placeholder=\"Name\" />\r\n");
      out.write("      ID:<input type=\"email\" placeholder=\"아이디를 입력하세요\" />\r\n");
      out.write("      PW:<input type=\"password\" placeholder=\"Password\" />\r\n");
      out.write("      <button>Sign Up</button>\r\n");
      out.write("    </form>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"form-container sign-in-container\">\r\n");
      out.write("    <form action=\"#\">\r\n");
      out.write("      <h1>Sign in</h1>\r\n");
      out.write("      <div class=\"social-container\">\r\n");
      out.write("        <a href=\"#\" class=\"social\"><i class=\"fab fa-facebook-f\"></i></a>\r\n");
      out.write("        <a href=\"#\" class=\"social\"><i class=\"fab fa-google-plus-g\"></i></a>\r\n");
      out.write("        <a href=\"#\" class=\"social\"><i class=\"fab fa-linkedin-in\"></i></a>\r\n");
      out.write("      </div>\r\n");
      out.write("      <span>or use your account</span>\r\n");
      out.write("      <input type=\"email\" placeholder=\"Email\" />\r\n");
      out.write("      <input type=\"password\" placeholder=\"Password\" />\r\n");
      out.write("      <a href=\"#\">Forgot your password?</a>\r\n");
      out.write("      <button>Sign In</button>\r\n");
      out.write("    </form>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"overlay-container\">\r\n");
      out.write("    <div class=\"overlay\">\r\n");
      out.write("      <div class=\"overlay-panel overlay-left\">\r\n");
      out.write("        <h1>Welcome Back!</h1>\r\n");
      out.write("        <p>To keep connected with us please login with your personal info</p>\r\n");
      out.write("        <button class=\"ghost\" id=\"signIn\">Sign In</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"overlay-panel overlay-right\">\r\n");
      out.write("        <h1>Hello, Friend!</h1>\r\n");
      out.write("        <p>Enter your personal details and start journey with us</p>\r\n");
      out.write("        <button class=\"ghost\" id=\"signUp\">Sign Up</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"test.js\"></script> <!--값이 없으면 못먹는 경우도 있어서 그 처리를 아래에 넣는 경우도 있음 스타일은 헤더에 스크리븡는 바디 닫기 직기전에 넣을수도잇음-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<h1>Index Page,  로그인페이지입니다.</h1>\r\n");
      out.write("	<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ses.id eq null }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write(' ');
      out.write("\r\n");
      out.write("		<form action=\"/mem/login\" method=\"post\">\r\n");
      out.write("		ID : <input type=\"text\" name=\"id\">	\r\n");
      out.write("		PWD : <input type=\"text\" name=\"pwd\">\r\n");
      out.write("		<button type=\"submit\">LOGIN</button> ");
      out.write("\r\n");
      out.write("		</form>\r\n");
      out.write("	</c:if>\r\n");
      out.write("	\r\n");
      out.write("	<br>\r\n");
      out.write("	<hr>\r\n");
      out.write("	\r\n");
      out.write("	<div>\r\n");
      out.write("		<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ses.id ne null }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write("\r\n");
      out.write("			");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ses.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" login  하였습니다<br>\r\n");
      out.write("			계정 생성일 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ses.regdate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("			마지막 접속 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ses.lastlogin }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("			\r\n");
      out.write("			<a href=\"/mem/modify\"><button>회원정보수정</button></a>\r\n");
      out.write("			<a href=\"/mem/list\"><button>회원리스트</button></a>\r\n");
      out.write("			<a href=\"/mem/logout\"><button>(회원당사자)로그아웃</button></a>\r\n");
      out.write("			<a href=\"/brd/register\"><button>게시판 글쓰기</button></a>\r\n");
      out.write("		</c:if>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<a href=\"/mem/join\"><button>회원가입</button></a>\r\n");
      out.write("	<br>\r\n");
      out.write("	<a href=\"/brd/pageList\"><button>게시판 리스트</button></a>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\"> ");
      out.write("\r\n");
      out.write("		const msg_login=`<c:out value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg_login}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/>`; ");
      out.write("\r\n");
      out.write("		console.log(msg_login);\r\n");
      out.write("		if(msg_login === '0'){\r\n");
      out.write("			alert(\"로그인 정보가 일치하지 않습니다.\")	\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<!-- 추가부분 끝 ------------------------------------------------------------------>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
